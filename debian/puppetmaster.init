#! /bin/sh
### BEGIN INIT INFO
# Provides:          puppetmaster
# Required-Start:    $network $named $remote_fs $syslog
# Required-Stop:     $network $named $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: puppet master
# Description:       The puppet master accepts connections from puppet agents,
#                    compiles manifests into catalogs for them, acts as a file
#                    server and report server.
### END INIT INFO                 

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/puppet
DAEMON_OPTS=""
NAME=master
DESC="puppet master"

test -x $DAEMON || exit 0

[ -r /etc/default/puppetmaster ] && . /etc/default/puppetmaster

. /lib/lsb/init-functions

if [ ! -d /var/run/puppet ]; then
	mkdir -p /var/run/puppet
fi

chown puppet:puppet /var/run/puppet

is_true() {
    if [ "x$1" = "xtrue" -o "x$1" = "xyes" -o "x$1" = "x0" ] ; then
        return 0
    else
        return 1
    fi
}

start_puppet_master() {
    if is_true "$START" ; then
	start-stop-daemon --start --quiet --pidfile /var/run/puppet/${NAME}.pid \
	    --startas $DAEMON -- $NAME $DAEMON_OPTS
    else
	echo ""
	echo "puppetmaster not configured to start, please edit /etc/default/puppetmaster to enable"
    fi
}

stop_puppet_master() {
    start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/puppet/${NAME}.pid
}

status_puppet_master() {
    status_of_proc -p "/var/run/puppet/${NAME}.pid" "${DAEMON}" "${NAME}"
}


case "$1" in
    start)
	log_begin_msg "Starting $DESC"
	start_puppet_master
	log_end_msg $?
	;;
    stop)
	log_begin_msg "Stopping $DESC"
	stop_puppet_master
	log_end_msg $?
	;;
    reload)
  	# Do nothing, as Puppetmaster rechecks its config automatically
        ;;
    status)
	status_puppet_master
        ;;
    restart|force-reload)
	log_begin_msg "Restarting $DESC"
	stop_puppet_master
	sleep 1
	start_puppet_master
	log_end_msg $?
	;;
    *)
	echo "Usage: $0 {start|stop|status|restart|force-reload}" >&2
	exit 1
	;;
esac
